{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\New folder (5)\\\\medical-lab-system\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  requiredRole\n}) => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const location = useLocation();\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role is specified and user doesn't have the required role, redirect to home\n  if (requiredRole && user.role !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the outlet (child routes)\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"N+lJalCaxsy/KIGLNcP66zKeeR4=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","requiredRole","_s","user","isAuthenticated","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/New folder (5)/medical-lab-system/src/components/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nconst ProtectedRoute = ({ requiredRole }) => {\r\n  const { user, isAuthenticated } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // If not authenticated, redirect to login\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // If role is specified and user doesn't have the required role, redirect to home\r\n  if (requiredRole && user.role !== requiredRole) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Render the outlet (child routes)\r\n  return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC3C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACQ,eAAe,EAAE;IACpB,oBAAOL,OAAA,CAACL,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS,CAAE;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIZ,YAAY,IAAIE,IAAI,CAACW,IAAI,KAAKb,YAAY,EAAE;IAC9C,oBAAOF,OAAA,CAACL,QAAQ;MAACY,EAAE,EAAC,GAAG;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,oBAAOd,OAAA,CAACJ,MAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACX,EAAA,CAhBIF,cAAc;EAAA,QACgBH,OAAO,EACxBD,WAAW;AAAA;AAAAmB,EAAA,GAFxBf,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}